name: Deploy to AWS EKS
on:
  push:
    branches: [ workflow ]
  pull_request:
    branches: [ workflow ]

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: cluster-prac
  K8S_NAMESPACE: ticketing-web

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR
      env:
        PUBLIC_ECR_URI: public.ecr.aws/n4q9v7r0/web-repositories
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --platform=linux/amd64 -t $PUBLIC_ECR_URI:$IMAGE_TAG .
        docker push $PUBLIC_ECR_URI:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        sed -i 's|image: .*|image: '"$PUBLIC_ECR_URI:$IMAGE_TAG"'|' k8s/deployment.yaml
        kubectl apply -f k8s/ -n ${{ env.K8S_NAMESPACE }}
        DEPLOYMENT_NAME=$(grep "name:" k8s/deployment.yaml | head -n 1 | awk '{print $2}')
        kubectl rollout restart deployment/$DEPLOYMENT_NAME -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n ${{ env.K8S_NAMESPACE }}
